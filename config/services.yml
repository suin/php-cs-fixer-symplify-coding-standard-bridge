services:
  _defaults:
    public: true
    autowire: true

  # Fixers
  Symplify\CodingStandard\Fixer\ArrayNotation\StandaloneLineInMultilineArrayFixer:
  Symplify\CodingStandard\Fixer\Commenting\BlockPropertyCommentFixer:
  Symplify\CodingStandard\Fixer\Commenting\ParamReturnAndVarTagMalformsFixer:
  Symplify\CodingStandard\Fixer\Commenting\RemoveEmptyDocBlockFixer:
  Symplify\CodingStandard\Fixer\Commenting\RemoveEndOfFunctionCommentFixer:
  Symplify\CodingStandard\Fixer\Commenting\RemoveSuperfluousDocBlockWhitespaceFixer:
  Symplify\CodingStandard\Fixer\Commenting\RemoveUselessDocBlockFixer:
  Symplify\CodingStandard\Fixer\ControlStructure\RequireFollowedByAbsolutePathFixer:
  Symplify\CodingStandard\Fixer\LineLength\LineLengthFixer:
  Symplify\CodingStandard\Fixer\Naming\PropertyNameMatchingTypeFixer:
  Symplify\CodingStandard\Fixer\Order\MethodOrderByTypeFixer:
  Symplify\CodingStandard\Fixer\Order\PrivateMethodOrderByUseFixer:
  Symplify\CodingStandard\Fixer\Order\PropertyOrderByComplexityFixer:
  Symplify\CodingStandard\Fixer\Php\ClassStringToClassConstantFixer:
  Symplify\CodingStandard\Fixer\Property\ArrayPropertyDefaultValueFixer:
  Symplify\CodingStandard\Fixer\Solid\FinalInterfaceFixer:
  Symplify\CodingStandard\Fixer\Strict\BlankLineAfterStrictTypesFixer:

  # Hacks
  Symplify\EasyCodingStandard\SniffRunner\Application\SniffFileProcessor:
    arguments:
      # This setting is to prevent autowiring failure. PHP CS Fixer dose not
      # need PHP Code Sniffer Sniff classes. On the other hand, Symplify
      # expects that the Sniff classes exist. To solve this conflict, this
      # setting simply replaces Sniff classes injection with empty array.
      $sniffs: []
